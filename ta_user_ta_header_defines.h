/*
 * File automatically generated by
 * gengen 1.4.2 by Lorenzo Bettini 
 * http://www.gnu.org/software/gengen
 */

#ifndef TA_USER_TA_HEADER_DEFINES_GEN_CLASS_H
#define TA_USER_TA_HEADER_DEFINES_GEN_CLASS_H

#include <string>
#include <iostream>

using std::string;
using std::ostream;

class ta_user_ta_header_defines_gen_class
{
 protected:
  string srcname;

 public:
  ta_user_ta_header_defines_gen_class()
  {
  }
  
  ta_user_ta_header_defines_gen_class(const string &_srcname) :
    srcname (_srcname)
  {
  }

  void set_srcname(const string &_srcname)
  {
    srcname = _srcname;
  }

  void generate_ta_user_ta_header_defines(ostream &stream, unsigned int indent = 0)
  {
    string indent_str (indent, ' ');
    indent = 0;
  
    stream << "/*";
    stream << "\n";
    stream << indent_str;
    stream << " * Copyright (c) 2016-2017, Linaro Limited";
    stream << "\n";
    stream << indent_str;
    stream << " * All rights reserved.";
    stream << "\n";
    stream << indent_str;
    stream << " *";
    stream << "\n";
    stream << indent_str;
    stream << " * Redistribution and use in source and binary forms, with or without";
    stream << "\n";
    stream << indent_str;
    stream << " * modification, are permitted provided that the following conditions are met:";
    stream << "\n";
    stream << indent_str;
    stream << " *";
    stream << "\n";
    stream << indent_str;
    stream << " * 1. Redistributions of source code must retain the above copyright notice,";
    stream << "\n";
    stream << indent_str;
    stream << " * this list of conditions and the following disclaimer.";
    stream << "\n";
    stream << indent_str;
    stream << " *";
    stream << "\n";
    stream << indent_str;
    stream << " * 2. Redistributions in binary form must reproduce the above copyright notice,";
    stream << "\n";
    stream << indent_str;
    stream << " * this list of conditions and the following disclaimer in the documentation";
    stream << "\n";
    stream << indent_str;
    stream << " * and/or other materials provided with the distribution.";
    stream << "\n";
    stream << indent_str;
    stream << " *";
    stream << "\n";
    stream << indent_str;
    stream << " * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"";
    stream << "\n";
    stream << indent_str;
    stream << " * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE";
    stream << "\n";
    stream << indent_str;
    stream << " * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE";
    stream << "\n";
    stream << indent_str;
    stream << " * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE";
    stream << "\n";
    stream << indent_str;
    stream << " * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR";
    stream << "\n";
    stream << indent_str;
    stream << " * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF";
    stream << "\n";
    stream << indent_str;
    stream << " * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS";
    stream << "\n";
    stream << indent_str;
    stream << " * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN";
    stream << "\n";
    stream << indent_str;
    stream << " * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)";
    stream << "\n";
    stream << indent_str;
    stream << " * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE";
    stream << "\n";
    stream << indent_str;
    stream << " * POSSIBILITY OF SUCH DAMAGE.";
    stream << "\n";
    stream << indent_str;
    stream << " */";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "/*";
    stream << "\n";
    stream << indent_str;
    stream << " * The name of this file must not be modified";
    stream << "\n";
    stream << indent_str;
    stream << " */";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "#ifndef USER_TA_HEADER_DEFINES_H";
    stream << "\n";
    stream << indent_str;
    stream << "#define USER_TA_HEADER_DEFINES_H";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "/* To get the TA UUID definition */";
    stream << "\n";
    stream << indent_str;
    stream << "#include <";
    stream << srcname;
    stream << ".h>";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "#define TA_UUID				TA_H_UUID";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "/*";
    stream << "\n";
    stream << indent_str;
    stream << " * TA properties: multi-instance TA, no specific attribute";
    stream << "\n";
    stream << indent_str;
    stream << " * TA_FLAG_EXEC_DDR is meaningless but mandated.";
    stream << "\n";
    stream << indent_str;
    stream << " */";
    stream << "\n";
    stream << indent_str;
    stream << "#define TA_FLAGS			TA_FLAG_EXEC_DDR";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "/* Provisioned stack size */";
    stream << "\n";
    stream << indent_str;
    stream << "#define TA_STACK_SIZE			(2 * 1024)";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "/* Provisioned heap size for TEE_Malloc() and friends */";
    stream << "\n";
    stream << indent_str;
    stream << "#define TA_DATA_SIZE			(32 * 1024)";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "/* The gpd.ta.version property */";
    stream << "\n";
    stream << indent_str;
    stream << "#define TA_VERSION	\"1.0\"";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "/* The gpd.ta.description property */";
    stream << "\n";
    stream << indent_str;
    stream << "#define TA_DESCRIPTION	\"Example of OP-TEE Hello World Trusted Application\"";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "/* Extra properties */";
    stream << "\n";
    stream << indent_str;
    stream << "#define TA_CURRENT_TA_EXT_PROPERTIES \\";
    stream << "\n";
    stream << indent_str;
    stream << "    { \"org.linaro.optee.examples.hello_world.property1\", \\";
    stream << "\n";
    stream << indent_str;
    stream << "	USER_TA_PROP_TYPE_STRING, \\";
    stream << "\n";
    stream << indent_str;
    stream << "        \"Some string\" }, \\";
    stream << "\n";
    stream << indent_str;
    stream << "    { \"org.linaro.optee.examples.hello_world.property2\", \\";
    stream << "\n";
    stream << indent_str;
    stream << "	USER_TA_PROP_TYPE_U32, &(const uint32_t){ 0x0010 } }";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "#endif /* USER_TA_HEADER_DEFINES_H */";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
  }
};

#endif // TA_USER_TA_HEADER_DEFINES_GEN_CLASS_H
